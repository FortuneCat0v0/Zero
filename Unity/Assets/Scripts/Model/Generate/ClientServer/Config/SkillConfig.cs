
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using Luban;

namespace ET
{
    [EnableClass]
    public sealed partial class SkillConfig : BeanBase
    {
        public SkillConfig(ByteBuf _buf)
        {
            Id = _buf.ReadInt();
            Level = _buf.ReadInt();
            SkillAbstractType = (ESkillAbstractType)_buf.ReadInt();
            Name = _buf.ReadString();
            Desc = _buf.ReadString();
            CD = _buf.ReadInt();
            Life = _buf.ReadInt();
            {int n0 = Math.Min(_buf.ReadSize(), _buf.Size);AEsServer = new List<string>(n0);for(var i0 = 0 ; i0 < n0 ; i0++) { string _e0;  _e0 = _buf.ReadString(); AEsServer.Add(_e0);}}
            {int n0 = Math.Min(_buf.ReadSize(), _buf.Size);AEParamsServer = new List<List<int>>(n0);for(var i0 = 0 ; i0 < n0 ; i0++) { List<int> _e0;  {int n1 = Math.Min(_buf.ReadSize(), _buf.Size);_e0 = new List<int>(n1);for(var i1 = 0 ; i1 < n1 ; i1++) { int _e1;  _e1 = _buf.ReadInt(); _e0.Add(_e1);}} AEParamsServer.Add(_e0);}}
            {int n0 = Math.Min(_buf.ReadSize(), _buf.Size);AETriggerPercentServer = new List<int>(n0);for(var i0 = 0 ; i0 < n0 ; i0++) { int _e0;  _e0 = _buf.ReadInt(); AETriggerPercentServer.Add(_e0);}}
            {int n0 = Math.Min(_buf.ReadSize(), _buf.Size);AEsClient = new List<string>(n0);for(var i0 = 0 ; i0 < n0 ; i0++) { string _e0;  _e0 = _buf.ReadString(); AEsClient.Add(_e0);}}
            {int n0 = Math.Min(_buf.ReadSize(), _buf.Size);AEParamsClient = new List<List<int>>(n0);for(var i0 = 0 ; i0 < n0 ; i0++) { List<int> _e0;  {int n1 = Math.Min(_buf.ReadSize(), _buf.Size);_e0 = new List<int>(n1);for(var i1 = 0 ; i1 < n1 ; i1++) { int _e1;  _e1 = _buf.ReadInt(); _e0.Add(_e1);}} AEParamsClient.Add(_e0);}}
            {int n0 = Math.Min(_buf.ReadSize(), _buf.Size);AETriggerPercentClient = new List<int>(n0);for(var i0 = 0 ; i0 < n0 ; i0++) { int _e0;  _e0 = _buf.ReadInt(); AETriggerPercentClient.Add(_e0);}}
            SkillIndicatorType = (ESkillIndicatorType)_buf.ReadInt();
            {int n0 = Math.Min(_buf.ReadSize(), _buf.Size);SkillIndicatorParams = new List<float>(n0);for(var i0 = 0 ; i0 < n0 ; i0++) { float _e0;  _e0 = _buf.ReadFloat(); SkillIndicatorParams.Add(_e0);}}

            PostInit();
        }

        public static SkillConfig DeserializeSkillConfig(ByteBuf _buf)
        {
            return new SkillConfig(_buf);
        }

        /// <summary>
        /// Id
        /// </summary>
        public readonly int Id;

        /// <summary>
        /// 技能等级
        /// </summary>
        public readonly int Level;

        /// <summary>
        /// 技能抽象类型
        /// </summary>
        public readonly ESkillAbstractType SkillAbstractType;

        /// <summary>
        /// 名字
        /// </summary>
        public readonly string Name;

        /// <summary>
        /// 描述
        /// </summary>
        public readonly string Desc;

        /// <summary>
        /// 冷却时间(毫秒)
        /// </summary>
        public readonly int CD;

        /// <summary>
        /// 技能执行时间(毫秒)
        /// </summary>
        public readonly int Life;

        /// <summary>
        /// 行为事件(服务端)
        /// </summary>
        public readonly List<string> AEsServer;

        /// <summary>
        /// 行为事件参数(服务端)
        /// </summary>
        public readonly List<List<int>> AEParamsServer;

        /// <summary>
        /// 行为事件触发百分比(服务端)
        /// </summary>
        public readonly List<int> AETriggerPercentServer;

        /// <summary>
        /// 行为事件(客户端)
        /// </summary>
        public readonly List<string> AEsClient;

        /// <summary>
        /// 行为事件参数(客户端)
        /// </summary>
        public readonly List<List<int>> AEParamsClient;

        /// <summary>
        /// 行为事件触发百分比(客户端)
        /// </summary>
        public readonly List<int> AETriggerPercentClient;

        /// <summary>
        /// 技能指示器类型
        /// </summary>
        public readonly ESkillIndicatorType SkillIndicatorType;

        /// <summary>
        /// 技能指示器参数
        /// </summary>
        public readonly List<float> SkillIndicatorParams;

        public const int __ID__ = -844226349;

        public override int GetTypeId() => __ID__;

        public override string ToString()
        {
            return "{ "
            + "Id:" + Id + ","
            + "Level:" + Level + ","
            + "SkillAbstractType:" + SkillAbstractType + ","
            + "Name:" + Name + ","
            + "Desc:" + Desc + ","
            + "CD:" + CD + ","
            + "Life:" + Life + ","
            + "AEsServer:" + StringUtil.CollectionToString(AEsServer) + ","
            + "AEParamsServer:" + StringUtil.CollectionToString(AEParamsServer) + ","
            + "AETriggerPercentServer:" + StringUtil.CollectionToString(AETriggerPercentServer) + ","
            + "AEsClient:" + StringUtil.CollectionToString(AEsClient) + ","
            + "AEParamsClient:" + StringUtil.CollectionToString(AEParamsClient) + ","
            + "AETriggerPercentClient:" + StringUtil.CollectionToString(AETriggerPercentClient) + ","
            + "SkillIndicatorType:" + SkillIndicatorType + ","
            + "SkillIndicatorParams:" + StringUtil.CollectionToString(SkillIndicatorParams) + ","
            + "}";
        }

        partial void PostInit();
    }
}
